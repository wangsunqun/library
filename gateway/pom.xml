<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.wsq.library</groupId>
        <artifactId>library</artifactId>
        <version>${library.version}</version>
    </parent>

    <artifactId>gateway</artifactId>
    <version>${gateway.version}</version>
    <packaging>pom</packaging>

    <modules>
        <module>gateway-starter</module>
        <module>gateway-plugin</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-web</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>

            <!-- divide插件是进行http正向代理的插件，所有http类型的请求，都是由该插件进行负载均衡的调用。 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-divide</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>

            <!-- shenyu httpclient plugin start-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-httpclient</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu httpclient plugin end-->

            <!-- 传递全局上下文的，很多插件要依赖它 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-global</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu global plugin end-->

            <!-- context_path 插件来重写请求路径的 contextPath
             例如请求路径为/shenyu/http/order， 配置的contextPath为/shenyu/http，那么真正请求的url为/order-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-context-path</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu context-path plugin end-->

            <!--shenyu response plugin start-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-response</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!--shenyu response plugin end-->


            <!-- 用来对你的请求参数进行修改的插件,只有匹配的请求，才会修改请求体 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-param-mapping</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!--shenyu param mapping end-->

            <!-- request 插件对请求参数、请求头以及 Cookie 来添加、修改、移除请求头 -->
            <!--            <dependency>-->
            <!--                <groupId>org.apache.shenyu</groupId>-->
            <!--                <artifactId>shenyu-spring-boot-starter-plugin-request</artifactId>-->
            <!--                <version>${shenyu.gateway.version}</version>-->
            <!--            </dependency>-->
            <!-- apache shenyu request plugin end-->

            <!-- shenyu waf plugin starter-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-waf</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu waf plugin end-->

            <!-- 用来监控自身运行状态（JVM相关），请求的响应迟延，QPS、TPS等相关metrics-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-monitor</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu monitor plugin end-->

            <!-- shenyu自己用redis实现的限流 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-ratelimiter</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu ratelimiter plugin end-->

            <!-- hystrix -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-hystrix</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu hystrix plugin end-->

            <!-- sentinel-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-sentinel</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu sentinel plugin end-->

            <!-- redirect 插件就是对 uri 的重新转发和重定向 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-redirect</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu redirect plugin end-->

            <!-- 当匹配到请求后，设置自定义的路径，那么自定义的路径就会覆盖之前的真实路径-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-rewrite</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu redirect plugin end-->

            <!-- logging 插件在日志中打印本次请求信息，包含请求路径、请求方法、请求参数和响应头、响应体等信息。 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-logging</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!--shenyu debug plugin end-->

            <!-- shenyu自己实现的一种casa的签名方式 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-sign</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu sign plugin end-->

            <!-- oauth2 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-oauth2</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!--shenyu oauth2 plugin end-->

            <!-- jwt -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-jwt</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!--shenyu jwt end-->

            <!-- 用来对响应进行修改的插件,只有匹配的请求，才会修改响应 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-modify-response</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!-- shenyu modify response plugin end-->

            <!--shenyu cryptor plugin start-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-cryptor</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!--shenyu cryptor end-->

            <!--shenyu websocket plugin start-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-websocket</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!--shenyu websocket plugin end-->

<!--            <dependency>-->
<!--                <groupId>org.apache.shenyu</groupId>-->
<!--                <artifactId>shenyu-spring-boot-starter-plugin-springcloud</artifactId>-->
<!--                <version>${shenyu.gateway.version}</version>-->
<!--            </dependency>-->

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-commons</artifactId>
                <version>${springcloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                <version>${springcloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${springcloud.version}</version>
            </dependency>

            <!--shenyu grpc plugin start-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-grpc</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <!--shenyu grpc plugin end-->

            <!--shenyu tars plugin start-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-tars</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>

            <dependency>
                <groupId>com.tencent.tars</groupId>
                <artifactId>tars-client</artifactId>
                <version>1.7.2</version>
            </dependency>
            <!--shenyu tars plugin end-->

            <!--shenyu  apache dubbo plugin start-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-plugin-apache-dubbo</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>2.7.5</version>
            </dependency>
            <!-- Dubbo Nacos registry dependency -->

            <!-- Dubbo zookeeper registry dependency start -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-client</artifactId>
                <version>4.0.1</version>
                <exclusions>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>4.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>4.0.1</version>
            </dependency>

            <!--shenyu data sync start use zookeeper-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-sync-data-zookeeper</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>

            <!-- 该插件在gateway里一定要引，是用来做admin和gateway通讯的 -->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-sync-data-websocket</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>

            <!--shenyu data sync start use http-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-sync-data-http</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>

            <!--shenyu data sync start use etcd-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-sync-data-etcd</artifactId>
                <version>${shenyu.gateway.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-grpclb</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-netty</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--shenyu debug plugin end-->

            <!--shenyu data sync start use consul-->
            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-spring-boot-starter-sync-data-consul</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shenyu</groupId>
                <artifactId>shenyu-plugin-base</artifactId>
                <version>${shenyu.gateway.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
